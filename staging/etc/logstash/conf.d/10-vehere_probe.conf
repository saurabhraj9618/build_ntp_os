input {
   file {
      path => "${DPI_DATA_PATH}/*.json"
      codec => plain
      close_older => 600
      max_open_files => 8192
      sincedb_path => "/var/cache/logstash/sincedbs/probe.db"
#      sincedb_path => "/dev/null"
      type => "VPROBE"
#      start_position => "beginning"
#      ignore_older => 0
   }
}

filter {
   mutate { add_field => { "[@metadata][index_type]" => "%{type}" } }
  
   if ([@metadata][index_type] == "VPROBE") {
	mutate { remove_field => "type" }
      	### Simple maths to create a sum-total fileds for packets, octets and, bytes
      	mutate {
		gsub => [
			"message", "[\u0000]", ""
			]
      	}
      	json {
        	source => "message"
      	}
      	mutate {
       		remove_field => "message"
      	}
       
      	if ([network][dst_ip]) {
         cidr {
            address => [ "%{[network][dst_ip]}" ]
            network => [ "169.254.0.0/16", "fe80::/64", "192.168.0.0/16" ]
            add_tag => [ "localdstip" ]
         }
         if ("localdstip" in [tags]) {
            mutate {
               add_field => {
                  "[@metadata][destinationIPv4Address]" => "${PVT_IP_ADDR}"
               }
            }
         } else {
              mutate {
                 add_field => {
                    "[@metadata][destinationIPv4Address]" => "%{[network][dst_ip]}"
                 }
              }
         }
         geoip {
            database => "/usr/local/etc/geoip/GeoLite2-City.mmdb"
            source => "[@metadata][destinationIPv4Address]"
            target => "[network][dst_geo_ip]"
            remove_tag => [ "localdstip" ]
         }
         geoip {
            database => "/usr/local/etc/geoip/GeoLite2-ASN.mmdb"
            source => "[@metadata][destinationIPv4Address]"
            target => "[network][dst_geo_ip]"
         }
      }
     
      if ([network][src_ip]) {
         cidr {
            address => [ "%{[network][src_ip]}" ]
            network => [ "169.254.0.0/16", "fe80::/64", "192.168.0.0/16" ]
            add_tag => [ "localsrcip" ]
         }
         if ("localsrcip" in [tags]) {
            mutate {
               add_field => {
                  "[@metadata][sourceIPv4Address]" => "${PVT_IP_ADDR}"
               }
            }
         } else {
              mutate {
                 add_field => {
                    "[@metadata][sourceIPv4Address]" => "%{[network][src_ip]}"
                 }
              }
         }
         geoip {
            database => "/usr/local/etc/geoip/GeoLite2-City.mmdb"
            source => "[@metadata][sourceIPv4Address]"
            target => "[network][src_geo_ip]"
            remove_tag => [ "localsrcip" ]
         }
         geoip {
            database => "/usr/local/etc/geoip/GeoLite2-ASN.mmdb"
            source => "[@metadata][sourceIPv4Address]"
            target => "[network][src_geo_ip]"
         }
      } 
      ### Begin Date Filter
      date {
         match => [ "[session][end_time_str]", "ISO8601" ]
         timezone => "Asia/Kolkata"
      }
    mutate { remove_field => ["path"]}
   if ("_jsonparsefailure" in [tags]) {
      drop { }
   }
}
}
output {
   ### Begin output handler. Sending flow data to fm-flows-YYYY.MM.dd index and, stats data to fm-stats-YYYY.MM.dd index
   if ([@metadata][index_type] == "VPROBE") {
      elasticsearch { 
         hosts => ["localhost:9200"] 
         index => "logvehere-probe-%{+YYYY.MM.dd}"
         document_type => "%{[@metadata][index_type]}"
         template => "/etc/logstash/templates/ls-vprobe.json"
         template_name => "vprobe"
         document_id => "%{[session][id]}"
      }
   }
   else if ([@metadata][metric_type] != "metricsets" or [@metadata][alerts_type] != "VRULEALERT" or [@metadata][alerts_type] != "VALERT" or [@metadata][alerts_type] != "VDNSALERT" or [@metadata][alerts_type] != "VNOALERT" or [@metadata][alerts_type] != "VDNSNOALERT" ) {
      elasticsearch { 
         hosts => ["localhost:9200"] 
         index => "logvehere-other-%{+YYYY.MM.dd}"
         document_type => "%{[@metadata][index_type]}"
	 template => "/etc/logstash/templates/ls-vother.json"
         template_name => "vother"
      }
   }
}
